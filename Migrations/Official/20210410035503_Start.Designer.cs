// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MummyMadness.Models;

namespace MummyMadness.Migrations.Official
{
    [DbContext(typeof(OfficialContext))]
    [Migration("20210410035503_Start")]
    partial class Start
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.4");

            modelBuilder.Entity("MummyMadness.Models.Official", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT")
                        .HasColumnName("ID");

                    b.Property<string>("AgeCodeSingle")
                        .HasColumnType("TEXT")
                        .HasColumnName("AgeCodeSINGLE");

                    b.Property<string>("AgeSkull2018")
                        .HasColumnType("TEXT")
                        .HasColumnName("Age\r\n(Skull\r\n2018)");

                    b.Property<string>("AreaHillburials")
                        .HasColumnType("TEXT")
                        .HasColumnName("Area(Hillburials)");

                    b.Property<string>("ArtiFemaleactFemaleound")
                        .HasColumnType("TEXT")
                        .HasColumnName("artiFemaleact_Femaleound");

                    b.Property<string>("ArtiFemaleactsDescription")
                        .HasColumnType("TEXT")
                        .HasColumnName("artiFemaleacts_description");

                    b.Property<string>("Bag")
                        .HasColumnType("TEXT")
                        .HasColumnName("Bag#");

                    b.Property<string>("BasilarSuture")
                        .HasColumnType("TEXT")
                        .HasColumnName("basilar_suture");

                    b.Property<double?>("BasionBregMaleaHeight")
                        .HasColumnType("REAL")
                        .HasColumnName("basion_bregMalea_height");

                    b.Property<double?>("BasionNasion")
                        .HasColumnType("REAL")
                        .HasColumnName("basion_nasion");

                    b.Property<double?>("BasionProsthionLength")
                        .HasColumnType("REAL")
                        .HasColumnName("basion_prosthion_length");

                    b.Property<string>("Biologicalcluster")
                        .HasColumnType("TEXT");

                    b.Property<double?>("BizygoMaleaticDiaMaleeter")
                        .HasColumnType("REAL")
                        .HasColumnName("bizygoMaleatic_diaMaleeter");

                    b.Property<string>("BodyAnalysis")
                        .HasColumnType("TEXT");

                    b.Property<string>("BoneTaken")
                        .HasColumnType("TEXT")
                        .HasColumnName("bone_taken");

                    b.Property<string>("Burial")
                        .HasColumnType("TEXT")
                        .HasColumnName("Burial#");

                    b.Property<string>("BurialDirection")
                        .HasColumnType("TEXT");

                    b.Property<string>("BurialId")
                        .HasColumnType("TEXT")
                        .HasColumnName("Burial_ID");

                    b.Property<string>("BurialLocationEw")
                        .HasColumnType("TEXT")
                        .HasColumnName("burial_location_EW");

                    b.Property<string>("BurialLocationNs")
                        .HasColumnType("TEXT")
                        .HasColumnName("burial_location_NS");

                    b.Property<long?>("BurialNuMaleber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BurialSituationNotes")
                        .HasColumnType("TEXT")
                        .HasColumnName("burial_situation_notes");

                    b.Property<string>("BurialSubplot")
                        .HasColumnType("TEXT")
                        .HasColumnName("burial_subplot");

                    b.Property<string>("Burialadultchild")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialadultchild");

                    b.Property<string>("BurialageMaleethod")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialageMaleethod");

                    b.Property<string>("Burialageatdeath")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialageatdeath");

                    b.Property<long?>("BurialareaNorthorSouth")
                        .HasColumnType("INTEGER")
                        .HasColumnName("burialareaNorthorSouth");

                    b.Property<long?>("Burialareaeastorwest")
                        .HasColumnType("INTEGER")
                        .HasColumnName("burialareaeastorwest");

                    b.Property<string>("Burialdepth")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialdepth");

                    b.Property<string>("BurialgenderMaleethod")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialgenderMaleethod");

                    b.Property<string>("Burialhaircolor")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialhaircolor");

                    b.Property<string>("Burialnors")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialnors");

                    b.Property<string>("Burialpreservation")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialpreservation");

                    b.Property<string>("BurialsaMalepletaken")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialsaMalepletaken");

                    b.Property<string>("BurialsouthtoFemaleeet")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialsouthtoFemaleeet");

                    b.Property<string>("Burialsouthtohead")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialsouthtohead");

                    b.Property<string>("BurialwesttoFemaleeet")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialwesttoFemaleeet");

                    b.Property<string>("Burialwesttohead")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialwesttohead");

                    b.Property<string>("Burialwrapping")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialwrapping");

                    b.Property<string>("Burialxeorw")
                        .HasColumnType("TEXT")
                        .HasColumnName("burialxeorw");

                    b.Property<string>("ButtonOsteoMalea")
                        .HasColumnType("TEXT");

                    b.Property<string>("ByusaMaleple")
                        .HasColumnType("TEXT")
                        .HasColumnName("BYUSaMaleple");

                    b.Property<string>("Cluster")
                        .HasColumnType("TEXT");

                    b.Property<string>("CranialSuture")
                        .HasColumnType("TEXT")
                        .HasColumnName("cranial_suture");

                    b.Property<string>("CribraOrbitala")
                        .HasColumnType("TEXT");

                    b.Property<string>("DateExcavated")
                        .HasColumnType("TEXT");

                    b.Property<string>("DayonSkull")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DescriptionOFemaleTaken")
                        .HasColumnType("TEXT")
                        .HasColumnName("description_oFemale_taken");

                    b.Property<long?>("DorsalPitting")
                        .HasColumnType("INTEGER")
                        .HasColumnName("dorsal_pitting");

                    b.Property<long?>("EastToFemaleeet")
                        .HasColumnType("INTEGER")
                        .HasColumnName("east_to_Femaleeet");

                    b.Property<long?>("EastToHead")
                        .HasColumnType("INTEGER")
                        .HasColumnName("east_to_head");

                    b.Property<string>("EpiphysealUnion")
                        .HasColumnType("TEXT")
                        .HasColumnName("epiphyseal_union");

                    b.Property<string>("EstiMaleateLivingStature")
                        .HasColumnType("TEXT")
                        .HasColumnName("estiMaleate_living_stature");

                    b.Property<string>("FemaleaceBundle")
                        .HasColumnType("TEXT");

                    b.Property<string>("FemaleeMaleurHead")
                        .HasColumnType("TEXT")
                        .HasColumnName("FemaleeMaleur_head");

                    b.Property<string>("FemaleeMaleurLength")
                        .HasColumnType("TEXT")
                        .HasColumnName("FemaleeMaleur_length");

                    b.Property<string>("FemaleieldBook")
                        .HasColumnType("TEXT");

                    b.Property<string>("FemaleieldBookPageNuMaleber")
                        .HasColumnType("TEXT");

                    b.Property<string>("FemaleoreMaleanMaleagnuMale")
                        .HasColumnType("TEXT")
                        .HasColumnName("FemaleoreMalean_MaleagnuMale");

                    b.Property<string>("GeFemaleunctionTotal")
                        .HasColumnType("TEXT")
                        .HasColumnName("GE_Femaleunction_total");

                    b.Property<string>("GenderCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("GenderGe")
                        .HasColumnType("TEXT")
                        .HasColumnName("gender_GE");

                    b.Property<string>("Gonian")
                        .HasColumnType("TEXT")
                        .HasColumnName("gonian");

                    b.Property<string>("Goods")
                        .HasColumnType("TEXT");

                    b.Property<string>("HairColor")
                        .HasColumnType("TEXT")
                        .HasColumnName("hair_color");

                    b.Property<string>("HairColorCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("HairTaken")
                        .HasColumnType("TEXT")
                        .HasColumnName("hair_taken");

                    b.Property<string>("HighPairEw")
                        .HasColumnType("TEXT")
                        .HasColumnName("high_pair_EW");

                    b.Property<string>("HighPairNs")
                        .HasColumnType("TEXT")
                        .HasColumnName("high_pair_NS");

                    b.Property<string>("HuMaleerusHead")
                        .HasColumnType("TEXT")
                        .HasColumnName("huMaleerus_head");

                    b.Property<string>("HuMaleerusLength")
                        .HasColumnType("TEXT")
                        .HasColumnName("huMaleerus_length");

                    b.Property<string>("InitialsoFemaleDataEntryChecker")
                        .HasColumnType("TEXT");

                    b.Property<string>("InitialsoFemaleDataEntryExpert")
                        .HasColumnType("TEXT");

                    b.Property<double?>("InterorbitalBreadth")
                        .HasColumnType("REAL")
                        .HasColumnName("interorbital_breadth");

                    b.Property<string>("Length")
                        .HasColumnType("TEXT")
                        .HasColumnName("length");

                    b.Property<string>("LengthCmale")
                        .HasColumnType("TEXT")
                        .HasColumnName("length(CMale)");

                    b.Property<string>("LengthMale")
                        .HasColumnType("TEXT")
                        .HasColumnName("length(Male)");

                    b.Property<string>("LinearHypoplasiaEnaMaleel")
                        .HasColumnType("TEXT");

                    b.Property<string>("LowPairEw")
                        .HasColumnType("TEXT")
                        .HasColumnName("low_pair_EW");

                    b.Property<string>("LowPairNs")
                        .HasColumnType("TEXT")
                        .HasColumnName("low_pair_NS");

                    b.Property<double?>("MaleaxiMaleuMaleCranialBreadth")
                        .HasColumnType("REAL")
                        .HasColumnName("MaleaxiMaleuMale_cranial_breadth");

                    b.Property<double?>("MaleaxiMaleuMaleCranialLength")
                        .HasColumnType("REAL")
                        .HasColumnName("MaleaxiMaleuMale_cranial_length");

                    b.Property<double?>("MaleaxiMaleuMaleNasalBreadth")
                        .HasColumnType("REAL")
                        .HasColumnName("MaleaxiMaleuMale_nasal_breadth");

                    b.Property<long?>("MaleedialIpRaMaleus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Maleedial_IP_raMaleus");

                    b.Property<string>("MaleetopicSuture")
                        .HasColumnType("TEXT");

                    b.Property<string>("MaleonthExcavated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Maleonthonskull")
                        .HasColumnType("TEXT");

                    b.Property<double?>("NasionProsthion")
                        .HasColumnType("REAL")
                        .HasColumnName("nasion_prosthion");

                    b.Property<string>("NuchalCrest")
                        .HasColumnType("TEXT")
                        .HasColumnName("nuchal_crest");

                    b.Property<string>("OrbitEdge")
                        .HasColumnType("TEXT")
                        .HasColumnName("orbit_edge");

                    b.Property<string>("OsteologyNotes")
                        .HasColumnType("TEXT");

                    b.Property<string>("OsteologyunknowncoMaleMaleent")
                        .HasColumnType("TEXT");

                    b.Property<string>("Osteophytosis")
                        .HasColumnType("TEXT")
                        .HasColumnName("osteophytosis");

                    b.Property<string>("ParietalBossing")
                        .HasColumnType("TEXT")
                        .HasColumnName("parietal_bossing");

                    b.Property<string>("PathologyAnoMalealies")
                        .HasColumnType("TEXT")
                        .HasColumnName("pathology_anoMalealies");

                    b.Property<string>("PoroticHyperostosis")
                        .HasColumnType("TEXT");

                    b.Property<string>("PoroticHyperostosisLocations")
                        .HasColumnType("TEXT")
                        .HasColumnName("PoroticHyperostosis(LOCATIONS)");

                    b.Property<string>("PostcraniaTrauMalea")
                        .HasColumnType("TEXT");

                    b.Property<string>("PostcraniaatMaleagazine")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PreaurSulcus")
                        .HasColumnType("INTEGER")
                        .HasColumnName("preaur_sulcus");

                    b.Property<string>("PreservationIndex")
                        .HasColumnType("TEXT")
                        .HasColumnName("preservation_index");

                    b.Property<string>("PreviouslysaMalepled")
                        .HasColumnType("TEXT");

                    b.Property<long?>("PubicBone")
                        .HasColumnType("INTEGER")
                        .HasColumnName("pubic_bone");

                    b.Property<string>("PubicSyMalephysis")
                        .HasColumnType("TEXT")
                        .HasColumnName("pubic_syMalephysis");

                    b.Property<string>("Rack")
                        .HasColumnType("TEXT")
                        .HasColumnName("Rack#");

                    b.Property<string>("RackandShelFemale")
                        .HasColumnType("TEXT");

                    b.Property<string>("Robust")
                        .HasColumnType("TEXT")
                        .HasColumnName("robust");

                    b.Property<string>("SaMalepleNuMaleber")
                        .HasColumnType("TEXT")
                        .HasColumnName("saMaleple_nuMaleber");

                    b.Property<long?>("SciaticNotch")
                        .HasColumnType("INTEGER")
                        .HasColumnName("sciatic_notch");

                    b.Property<string>("SexSkull2018")
                        .HasColumnType("TEXT")
                        .HasColumnName("Sex\r\n(Skull2018)");

                    b.Property<string>("SkullTrauMalea")
                        .HasColumnType("TEXT");

                    b.Property<string>("SkullatMaleagazine")
                        .HasColumnType("TEXT");

                    b.Property<string>("SoFemaletTissueTaken")
                        .HasColumnType("TEXT")
                        .HasColumnName("soFemalet_tissue_taken");

                    b.Property<string>("Square")
                        .HasColumnType("TEXT");

                    b.Property<long?>("SubpubicAngle")
                        .HasColumnType("INTEGER")
                        .HasColumnName("subpubic_angle");

                    b.Property<string>("SupraorbitalRidges")
                        .HasColumnType("TEXT")
                        .HasColumnName("supraorbital_ridges");

                    b.Property<string>("TeMaleporalMaleandibularJointOsteoarthritisTmaleJoa")
                        .HasColumnType("TEXT")
                        .HasColumnName("TeMaleporalMaleandibularJointOsteoarthritis(TMaleJOA)");

                    b.Property<string>("TextileTaken")
                        .HasColumnType("TEXT")
                        .HasColumnName("textile_taken");

                    b.Property<string>("TibiaLength")
                        .HasColumnType("TEXT")
                        .HasColumnName("tibia_length");

                    b.Property<string>("ToMaleb")
                        .HasColumnType("TEXT");

                    b.Property<string>("TobeconfemaleIrmaleEd")
                        .HasColumnType("TEXT")
                        .HasColumnName("TOBECONFemaleIRMaleED");

                    b.Property<string>("ToothAttrition")
                        .HasColumnType("TEXT")
                        .HasColumnName("tooth_attrition");

                    b.Property<string>("ToothEruption")
                        .HasColumnType("TEXT")
                        .HasColumnName("tooth_eruption");

                    b.Property<string>("ToothTaken")
                        .HasColumnType("TEXT")
                        .HasColumnName("tooth_taken");

                    b.Property<long?>("VentralArc")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ventral_arc");

                    b.Property<string>("Yearexcav")
                        .HasColumnType("TEXT")
                        .HasColumnName("yearexcav");

                    b.Property<string>("YearonSkull")
                        .HasColumnType("TEXT");

                    b.Property<string>("ZygoMaleaticCrest")
                        .HasColumnType("TEXT")
                        .HasColumnName("zygoMaleatic_crest");

                    b.HasKey("Id");

                    b.ToTable("Official");
                });
#pragma warning restore 612, 618
        }
    }
}
